apiVersion: v1
kind: ConfigMap
metadata:
  name: cloudcore
  namespace: kubeedge
  labels:
    k8s-app: kubeedge
    kubeedge: cloudcore
data:
  cloudcore.yaml: |
    apiVersion: cloudcore.config.kubeedge.io/v1alpha1
    kind: CloudCore
    kubeAPIConfig:
      kubeConfig: "/root/.kube/config"
      master: ""
    modules:
      controller:
        kube:
          master: ""     # kube-apiserver address (such as:http://localhost:8080)
          namespace: ""
          content_type: "application/vnd.kubernetes.protobuf"
          qps: 5
          burst: 10
          node_update_frequency: 10
          kubeconfig: "/root/.kube/config"   #Enter absolute path to kubeconfig file to enable https connection to k8s apiserver.
      cloudHub:
        advertiseAddress:
         - YOUR CLOUDCORE VIP HERE !!!
        nodeLimit: 100000
        tlsCAFile: /etc/kubeedge/ca/rootCA.crt
        tlsCAKeyFile: /etc/kubeedge/ca/rootCA.key
        tlsCertFile: /etc/kubeedge/certs/server.crt
        tlsPrivateKeyFile: /etc/kubeedge/certs/server.key
        unixsocket:
          address: unix:///var/lib/kubeedge/kubeedge.sock
          enable: true
        websocket:
          tlsCAFile: /etc/kubeedge/ca/rootCA.crt
          tlsCAKeyFile: /etc/kubeedge/ca/rootCA.key
          tlsCertFile: /etc/kubeedge/certs/server.crt
          tlsPrivateKeyFile: /etc/kubeedge/certs/server.key
          address: 0.0.0.0
          enable: true
          port: 10000
      cloudStream:
         enable: true
         streamPort: 10003
         tlsStreamCAFile: /etc/kubeedge/ca/streamCA.crt
         tlsStreamCertFile: /etc/kubeedge/certs/stream.crt
         tlsStreamPrivateKeyFile: /etc/kubeedge/certs/stream.key
         tlsTunnelCAFile: /etc/kubeedge/ca/rootCA.crt
         tlsTunnelCertFile: /etc/kubeedge/certs/server.crt
         tlsTunnelPrivateKeyFile: /etc/kubeedge/certs/server.key
         tunnelPort: 10004
      deviceController:
        kube:
          master: ""   # kube-apiserver address (such as:http://localhost:8080)
          namespace: ""
          content_type: "application/vnd.kubernetes.protobuf"
          qps: 5
          burst: 10
          kubeconfig: "/root/.kube/config"   #Enter absolute path to kubeconfig file to enable https connection to k8s apiserver.
        buffer:
          deviceEvent: 1
          deviceModelEvent: 1
          updateDeviceStatus: 1024
        context:
          receiveModule: devicecontroller
          responseModule: cloudhub
          sendModule: cloudhub
        enable: true
        load:
          updateDeviceStatusWorkers: 1
      dynamicController:
        enable: true
      edgeController:
        buffer:
          configMapEvent: 1
          deletePod: 1024
          endpointsEvent: 1
          podEvent: 1
          queryConfigMap: 1024
          queryEndpoints: 1024
          queryNode: 1024
          queryPersistentVolume: 1024
          queryPersistentVolumeClaim: 1024
          querySecret: 1024
          queryService: 1024
          queryVolumeAttachment: 1024
          ruleEndpointsEvent: 1
          rulesEvent: 1
          secretEvent: 1
          serviceEvent: 1
          updateNode: 1024
          updateNodeStatus: 1024
          updatePodStatus: 1024
        context:
          receiveModule: edgecontroller
          responseModule: cloudhub
          sendModule: cloudhub
          sendRouterModule: router
        enable: true
        load:
          deletePodWorkers: 4
          queryConfigMapWorkers: 4
          queryEndpointsWorkers: 4
          queryNodeWorkers: 4
          queryPersistentVolumeClaimWorkers: 4
          queryPersistentVolumeWorkers: 4
          querySecretWorkers: 4
          queryServiceWorkers: 4
          queryVolumeAttachmentWorkers: 4
          updateNodeStatusWorkers: 1
          updateNodeWorkers: 4
          updatePodStatusWorkers: 1
        nodeUpdateFrequency: 10
      router:
        address: 0.0.0.0
        port: 9443
        restTimeout: 60
        enable: true
      syncController:
        enable: true
